Starting audit...
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:11:17: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:11:18: Parameter card should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:17:19: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:17:20: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:19:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:23:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:23:25: Parameter mana should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:27:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:31:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:31:32: Parameter description should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:35:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:39:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:39:27: Parameter colors should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:43:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:47:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Card.java:47:25: Parameter name should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:9:21: Parameter dec should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:10:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:11:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:11:58: '||' should be on a new line. [OperatorWrap]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:12:58: '||' should be on a new line. [OperatorWrap]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:23:5: Class 'DeckInit' looks like designed for extension (can be subclassed), but the method 'getDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckInit' final or making the method 'getDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:27:5: Class 'DeckInit' looks like designed for extension (can be subclassed), but the method 'setDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckInit' final or making the method 'setDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\DeckInit.java:27:25: Parameter deck should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Environment.java:4:24: Parameter input should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Environment.java:7:5: Class 'Environment' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Environment' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Hero.java:3:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Hero.java:4:33: '30' is a magic number. [MagicNumber]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Hero.java:6:17: Parameter card should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Hero.java:10:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:3:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:7:19: Parameter input should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:13:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:17:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:17:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:21:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:25:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:25:27: Parameter health should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Minion.java:29:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:13:19: Parameter deck should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:13:41: Parameter hero should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:13:52: Parameter playerIdx should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:19:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'PickUpCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'PickUpCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:19:17: Name 'PickUpCard' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:19:28: Parameter deck should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:19:44: 'deck' hides a field. [HiddenField]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:24:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:28:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:28:25: Parameter deck should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:32:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:36:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:36:25: Parameter hand should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:40:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:44:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:44:25: Parameter hero should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:48:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'isTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'isTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:52:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:52:25: Parameter turn should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:56:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:60:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\fileio\Player.java:60:30: Parameter playerIdx should be final. [FinalParameters]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\main\Main.java:9:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\main\Main.java:20:36: Using the '.*' form of import should be avoided - java.util.Collections.*. [AvoidStarImport]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\main\Main.java:115:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\main\Main.java:117:25: Name 'curr_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] S:\Facultate\Anul 2\Sem1\POO\tema1\.\src\main\Main.java:123:25: Name 'curr_hero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
Audit done.
Checkstyle ends with 67 errors.
